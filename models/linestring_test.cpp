#include <gtest/gtest.h>
#include <string>
#include <iostream>
#include "linestring.hpp"

const static std::basic_string<uint8_t> buf{
        0x01, 0x02, 0x00, 0x00, 0x20, 0x15, 0x55, 0x00, 0x00, 0x14, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xCB, 0x24, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x48, 0xF3, 0x0D, 0x41, 0x00, 0x00, 0x00, 0x00, 0x34, 0x9C, 0x24,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x48, 0xF3, 0x0D, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x34, 0x9C, 0x24, 0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x2B, 0x0F,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x84, 0x65, 0x24, 0x41, 0x00, 0x00, 0x00,
        0x00, 0xC8, 0x2B, 0x0F, 0x41, 0x00, 0x00, 0x00, 0x00, 0x44, 0x46, 0x24,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x2B, 0x0F, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x24, 0xF8, 0x23, 0x41, 0x00, 0x00, 0x00, 0x00, 0x48, 0xF3, 0x0D,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x24, 0xF8, 0x23, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x08, 0xCE, 0x0E, 0x41, 0x00, 0x00, 0x00, 0x00, 0x24, 0xF8, 0x23,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x48, 0x70, 0x0E, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x94, 0x0F, 0x24, 0x41, 0x00, 0x00, 0x00, 0x00, 0x88, 0x12, 0x0E,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x94, 0x0F, 0x24, 0x41, 0x00, 0x00, 0x00,
        0x00, 0xC8, 0xAE, 0x0E, 0x41, 0x00, 0x00, 0x00, 0x00, 0x84, 0xE8, 0x23,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0xAE, 0x0E, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x14, 0xD1, 0x23, 0x41, 0x00, 0x00, 0x00, 0x00, 0x88, 0x0C, 0x0F,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xD8, 0x23, 0x41, 0x00, 0x00, 0x00,
        0x00, 0xC8, 0x2B, 0x0F, 0x41, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xD8, 0x23,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x2B, 0x0F, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x34, 0xA2, 0x23, 0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x2B, 0x0F,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x5B, 0x23, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x88, 0x12, 0x0E, 0x41, 0x00, 0x00, 0x00, 0x00, 0x14, 0x54, 0x23,
        0x41, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x31, 0x0E, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x14, 0x54, 0x23, 0x41, 0x00, 0x00, 0x00, 0x00, 0x08, 0xCE, 0x0E,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x14, 0x54, 0x23, 0x41, 0x00, 0x00, 0x00,
        0x00, 0x88, 0x0C, 0x0F, 0x41, 0x00, 0x00, 0x00, 0x00, 0x14, 0x54, 0x23,
        0x41, 0x00, 0x00, 0x00, 0x00, 0x48, 0xED, 0x0E, 0x41};

TEST (LineStringTest, ReadFromWKB) {
    std::istringstream is(*reinterpret_cast<const std::string *>(&buf), std::ios_base::binary);
    Geometry::LineString l;
    is >> l;
    ASSERT_STREQ(l.toString().c_str(),
        "SRID=21781;LINESTRING(681354 245353,675354 245353,675354 255353,668354 "
        "255353,664354 255353,654354 245353,654354 252353,654354 249353,657354 "
        "246353,657354 251353,652354 251353,649354 254353,650354 255353,650354 "
        "255353,643354 255353,634354 246353,633354 247353,633354 252353,633354 "
        "254353,633354 253353)");
}

TEST (LineStringTest, WriteToWKB) {
    std::istringstream is(*reinterpret_cast<const std::string *>(&buf), std::ios_base::binary);
    Geometry::LineString l;
    is >> l;
    std::ostringstream os(std::ios_base::binary);
    os << l;
    ASSERT_EQ(os.str(), *reinterpret_cast<const std::string *>(&buf));
}